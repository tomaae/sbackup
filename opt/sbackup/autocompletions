# bash completion for sbackup                                  -*- shell-script -*-

_sbackup_available_jobs()
{
  COMPREPLY=( $(compgen -W "$( /opt/sbackup/sbackup -api ac_available_jobs 2>/dev/null | \
      sed -n -e 's|^\(.*\)$|\1|p' )" -- "$cur" ) )
}

_sbackup_running_jobs()
{
  COMPREPLY=( $(compgen -W "$( /opt/sbackup/sbackup -api ac_running_jobs 2>/dev/null | \
      sed -n -e 's|^\(.*\)$|\1|p' )" -- "$cur" ) )
}

_sbackup_catalog_path()
{
  COMPREPLY=( $(compgen -W "$( /opt/sbackup/sbackup -api ac_catalog_path -job $1 -ver $2 -path $3 2>/dev/null | \
      sed -n -e 's|^\(.*\)$|\1|p' )" -- "$cur" ) )
}

_sbackup_purgeable_days()
{
	if [[ "$1" == -* ]]; then
		return 1;
	fi
	
  COMPREPLY=( $(compgen -W "$( /opt/sbackup/sbackup -api ac_purgeable_days -job $1 2>/dev/null | \
      sed -n -e 's|^\(.*\)$|\1|p' )" -- "$cur" ) )
}

_sbackup_available_versions()
{
	local cli_type
	for e in ${!words[@]}; do
		if [[ "${words[e]}" == -job* ]]; then
			p_job=${words[e + 1]}
		fi
	done
	if [[ "$p_job" == -* ]]; then
		return 1;
	fi
	
	for e in ${!words[@]}; do
		if [[ "${words[e]}" == -typ* ]]; then
			cli_type="-type "
			cli_type+=${words[e + 1]}
		fi
	done
	
  COMPREPLY=( $(compgen -W "$( /opt/sbackup/sbackup -api ac_available_versions $cli_type -job $p_job 2>/dev/null | \
      sed -n -e 's|^\(.*\)$|\1|p' )" -- "$cur" ) )
}

_sbackup_job()
{
	local cur prev words cword
	_init_completion || return
	
	local p_job
	
	case $prev in
		-job*)
			_sbackup_available_jobs
			return 0
			;;
		-ver*)
    	for e in ${!words[@]}; do
    		if [[ "${words[e]}" == -job* ]]; then
    			p_job=${words[e + 1]}
    		fi
    	done
			_sbackup_available_versions $p_job
			return 0
			;;
		-typ*)
			COMPREPLY=( $( compgen -W "backup purge verify" -- "$cur" ) )
			return 0
			;;
		-pat*)
    	for e in ${!words[@]}; do
    		if [[ "${words[e]}" == -job* ]]; then
    			p_job=${words[e + 1]}
    		fi
    	done
    	for e in ${!words[@]}; do
    		if [[ "${words[e]}" == -ver* ]]; then
    			p_ver=${words[e + 1]}
    		fi
    	done
			_sbackup_catalog_path $p_job $p_ver $cur
			return 0
			;;
	esac
	
	if [[ "$prev" == "-log" ]]; then
		if [[ "$cur" != -* ]]; then
			COMPREPLY=( $( compgen -W "normal warning minor major critical" -- "$cur" ) )
			return 0
		fi
	fi
	
	commands='-version'
	
	for e in ${!words[@]}; do
		if [[ "${words[e]}" == -ver* ]]; then
			commands+=' -log -path'
		fi
	done
	
	if [[ "$commands" != *"path"* ]]; then
		commands+=' -type'
	fi
	
	unset 'words[${#words[@]}-1]'
	COMPREPLY=( $( compgen -W "$commands" -- "$cur" ) )
	for i in ${!COMPREPLY[@]}; do
		for e in ${!words[@]}; do
			if [[ "${COMPREPLY[i]}" == "${words[e]}"* ]]; then
				unset COMPREPLY[i]
			fi
		done
	done
}

_sbackup_backup()
{
	local cur prev words cword
	_init_completion || return


	case $prev in
		-backup*|-export*)
			_sbackup_available_jobs
			return 0
			;;
	esac
}

_sbackup_purge()
{
	local cur prev words cword
	_init_completion || return
	
	local p_job
	
	case $prev in
		-purge)
			_sbackup_available_jobs
			return 0
			;;
		-day*)
    	for e in ${!words[@]}; do
    		if [[ "${words[e]}" == -pur* ]]; then
    			p_job=${words[e + 1]}
    		fi
    	done
			_sbackup_purgeable_days $p_job
			return 0
			;;
	esac
	
	unset 'words[${#words[@]}-1]'
	COMPREPLY=( $( compgen -W "$commands" -- "$cur" ) )
	for i in ${!COMPREPLY[@]}; do
		for e in ${!words[@]}; do
			if [[ "${COMPREPLY[i]}" == "${words[e]}"* ]]; then
				unset COMPREPLY[i]
			fi
		done
	done
}

_sbackup_abort()
{
	local cur prev words cword
	_init_completion || return

	case $prev in
		-abort)
			_sbackup_running_jobs
			return 0
			;;
	esac
}


_sbackup()
{
	local cur prev words cword
	_init_completion || return

	local command options
	
	commands='-backup -purge -abort -job -export -import'

	if [[ $cword -eq 1 ]]; then
		COMPREPLY=( $( compgen -W "$commands" -- "$cur" ) )
	else
		command=${words[1]}
		case $command in
			-job)
				_sbackup_job
				;;
			-backup|-export)
				_sbackup_backup
				;;
			-purge)
				_sbackup_purge
				;;
			-abort)
				_sbackup_abort
				;;
		esac
	fi
} &&
complete -F _sbackup sbackup #/usr/share/bash-completion/completions

# ex: ts=4 sw=4 et filetype=sh