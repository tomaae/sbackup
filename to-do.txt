In history log, create column for backup without data_uuid (rework all grep "|backup|$" to "|backup|(d*)|$")

==HISTORY========================================================
[]- option to remove version in backup history (create lockfile, delete data_uuid,release lockfile), run with "at now"
[]- start restore from backup history
=================================================================

==BKPLIST========================================================
[]- ?abort job
[]- ?running job status
=================================================================

==BACKUP=========================================================
- restart failed jobs
- warning on changing backup source (same as for changing filesystem in shared folders)
- warning on changing backup target (same as for changing filesystem in shared folders)
[]- settings, only one backup at once > queuing
[]- settings, only one backup to one target datastore at once > queuing

- rework schedule (combo checkbox?), ability to disable schedule
- disable will disable getting started as post_job, its copy, purge, verify

[]- use --log-file=FILE for realtime updates, after finished, copy it as metadata to backup destination
- backup configuration (backup specifications and backup history) after each backup, import via settings tab (backup history log copy and omv config import in same way as postinst)
  import backup. (save backup configuration within backup_uuid folder), select share point, search subdirectories for configs, show only those which have correct config and are not imported already
[]- report checkbox
[]- LVM snapshot (fields: checkbox enable, %sizeslider:sliderfield)
=================================================================

==RESTORE========================================================
- restore into different location

[]- autoselect latest version
[]- browse files
=================================================================

==VERIFY=========================================================
-Check if there are data directories not present in history log
-Check if there are data directories preset as failed (except last session)
-When session log is present(or by metadata), check if all data exists in data directory according to log, check hardlinks(?)
-md5 data consistency check? metadata based on rsync log saved into /meta_uuid directory (file/md5)
=================================================================

==COPY===========================================================
-fields:
backup_uuid
target_type (shared folder, rsync server, ssh) < (rsync: user, pwd, ip), (ssh: user, ip)
retention
savelog
post_purge
post_job

=================================================================

==RESTART========================================================
-Scheduled every 15 minutes
-checks history logs for one time failure
-restart job with "at now" soonest hour after failure
=================================================================


==OS BACKUP======================================================
dpkg -l|awk '{print $2}'|grep "^openmediavault-"
/etc/passwd
/etc/group
/etc/fstab ([openmediavault] part)
=================================================================

==FUTURE=========================================================
- "mv" data migration. started with "at", change state to "migrating", creates lockfile with old source for restart in case of failure

- change rm to (rsync -arv --delete ~/empty_local_folder/ /path/to/remote/folder/)
=================================================================
-add support to choose to backup to rsync server

Copy a File from a Remote Server to a Local Server with SSH
[root@tecmint]# rsync -avzhe ssh root@192.168.0.100:/root/install.log /tmp/

Copy a File from a Local Server to a Remote Server with SSH
[root@tecmint]# rsync -avzhe ssh backup.tar root@192.168.0.100:/backups/

8. Automatically Delete source Files after successful Transfer (copy session)
[root@tecmint]# rsync --remove-source-files -zvh backup.tar /tmp/backups/

10. Set Bandwidth Limit and Transfer File
[root@tecmint]# rsync --bwlimit=100 -avzhe ssh  /var/lib/rpm/  root@192.168.0.100:/root/tmprpm/
=================================================================


 -c, --checksum              skip based on checksum, not mod-time & size

excludes?:
 --exclude=PATTERN       exclude files matching PATTERN


=================================================================
==LVM SNAPSHOT===================================================
=================================================================
root@nc-nas3:~# df /media/4362c761-7698-4be0-ba4f-433bff97c9d5
Filesystem            1K-blocks  Used Available Use% Mounted on
/dev/mapper/vg_b-lv_4    774064 17164    756900   3% /media/4362c761-7698-4be0-ba4f-433bff97c9d5

root@nc-nas3:~# lvdisplay /dev/mapper/vg_b-lv_4
  --- Logical volume ---
  LV Path                /dev/vg_b/lv_4
  LV Name                lv_4
  VG Name                vg_b
  LV UUID                mamh13-aKxS-oIZ4-KSl7-FDD0-5jZV-9ueV5E
  LV Write Access        read/write
  LV Creation host, time nc-nas3, 2014-08-28 01:07:57 +0200
  LV Status              available
  # open                 1
  LV Size                768.00 MiB
  Current LE             192
  Segments               1
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     256
  Block device           253:3


=================================================================


lvcreate -l50%FREE -s -n lv_4_snap /dev/vg_b/lv_4
mount /dev/vg_b/lv_4_snap /mnt -oro
 << BACKUP
umount /dev/vg_b/lv_4_snap
lvremove -f /dev/vg_b/lv_4_snap
=================================================================
,{
                                xtype: "sliderfield",
                                name: "sizeslider",
                                minValue: 1,
                                maxValue: 100,
                                decimalPrecision: 0,
                                useTips: false,
                                disabled: true,
                                flex: 1,
                                submitValue: false,
                                value: 10
}